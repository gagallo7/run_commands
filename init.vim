" Dark powered mode of SpaceVim, generated by SpaceVim automatically.
let g:spacevim_enable_debug = 1
let g:spacevim_realtime_leader_guide = 1
call SpaceVim#layers#load('incsearch')
call SpaceVim#layers#load('lang#c')
call SpaceVim#layers#load('lang#cpp')
call SpaceVim#layers#load('lang#elixir')
call SpaceVim#layers#load('lang#go')
call SpaceVim#layers#load('lang#haskell')
call SpaceVim#layers#load('lang#java')
call SpaceVim#layers#load('lang#javascript')
call SpaceVim#layers#load('lang#lua')
call SpaceVim#layers#load('lang#perl')
call SpaceVim#layers#load('lang#php')
call SpaceVim#layers#load('lang#python')
call SpaceVim#layers#load('lang#rust')
call SpaceVim#layers#load('lang#swig')
call SpaceVim#layers#load('lang#tmux')
call SpaceVim#layers#load('lang#vim')
call SpaceVim#layers#load('lang#xml')
call SpaceVim#layers#load('shell')   
call SpaceVim#layers#load('tools#screensaver')
call SpaceVim#layers#load('lang#markdown')
call SpaceVim#layers#load('lang#html')
call SpaceVim#layers#load('lang#lsp')
call SpaceVim#layers#load('lang#gitlab')
call SpaceVim#layers#load('lang#github')
call SpaceVim#layers#load('lang#git')

call SpaceVim#layers#load('autocomplete')

let g:spacevim_enable_vimfiler_welcome = 1
let g:spacevim_enable_debug = 1
let g:deoplete#auto_complete_delay = 150
let g:spacevim_enable_tabline_filetype_icon = 1
let g:spacevim_enable_statusline_display_mode = 0
let g:spacevim_enable_os_fileformat_icon = 1
let g:spacevim_buffer_index_type = 1
let g:neomake_vim_enabled_makers = []
if executable('vimlint')
    call add(g:neomake_vim_enabled_makers, 'vimlint') 
endif
if executable('vint')
    call add(g:neomake_vim_enabled_makers, 'vint') 
endif
if has('python3')
    let g:ctrlp_map = ''
    let g:ctrlp_extensions = ['tag']
    nnoremap <silent> <C-p> :Denite file_rec<CR>
endif
let g:clang2_placeholder_next = ''
let g:clang2_placeholder_prev = ''

" C++ Style
set shiftwidth=4
let g:spacevim_default_indent = 4
let g:spacevim_max_column     = 100

set thesaurus+=~/Documents/words.txt

set cc=100

let g:spacevim_enable_ycm = 1

autocmd VimEnter * nnoremap f f
autocmd VimEnter * nnoremap F F
autocmd VimEnter * nnoremap s s

autocmd VimEnter * :nnoremap + /\$\w\+_<CR>
autocmd VimEnter * :nnoremap _ f_x~


noremap <C-x> <C-x>
nnoremap <leader><F12> :OnlineThesaurusCurrentWord<CR>
vnoremap <unique> <leader><F12> y:Thesaurus <C-r>"<CR>
nnoremap <C-p> :CtrlP<cr>
nnoremap <F12> :%s/\<\>//g<Left><Left>
nnoremap <C-q> :bp\|bd #<CR>

" Set windows shortcut leader [Window], default is `s`
let g:spacevim_windows_leader = '<F1>'

" Set unite work flow shortcut leader [Unite], default is `f`
let g:spacevim_unite_leader = 'U'

" Set unite work flow shortcut leader [Denite], default is `F`
let g:spacevim_denite_leader = '<F4>'

" Clang-format
map <C-K> :py3f /home/guilherme/scripts/clang-format.py<cr>
imap <C-K> <c-o>:py3f /home/guilherme/scripts/clang-format.py<cr>

let g:spacevim_custom_plugins = [
        \ ['beloglazov/vim-online-thesaurus'],
        \ ['scrooloose/vim-slumlord'],
        \ ['ctrlpvim/ctrlp.vim'],
        \ ['aklt/plantuml-syntax'],
        \ ['tpope/vim-fugitive'],
        \ ['ARM9/arm-syntax-vim'],
        \ ['rhysd/vim-grammarous'],
        \ ]


" Long arguments multiline BeautyShot coding style indentation
set cino+=(0
set cino+=N-s
set cino+=g0

" YCM supported snippet engine
let g:spacevim_snippet_engine = 'ultisnips'

" ctags command center
" Make tags chase upwards directories until find a tags file
set tags=tags;/


" Cscope hive
" Use cscope absolute paths
set csre
cs add ../cscope.out
nmap <leader>s :cs find s <C-R>=expand("<cword>")<CR><CR>  
nmap <leader>g :cs find g <C-R>=expand("<cword>")<CR><CR>  
nmap <leader>c :cs find c <C-R>=expand("<cword>")<CR><CR>  
nmap <leader>t :cs find t <C-R>=expand("<cword>")<CR><CR>  
nmap <leader>e :cs find e <C-R>=expand("<cword>")<CR><CR>  
nmap <leader>f :cs find f <C-R>=expand("<cfile>")<CR><CR>  
nmap <leader>i :cs find i ^<C-R>=expand("<cfile>")<CR>$<CR>
nmap <leader>d :cs find d <C-R>=expand("<cword>")<CR><CR>  
